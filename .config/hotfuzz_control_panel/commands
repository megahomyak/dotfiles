Copy Shrug
>echo -n "¯\_(ツ)_/¯" | xclip -selection clipboard &

COMmands EDIT
>terminator -x nvim ~/.config/hotfuzz_control_panel/commands &

COMmands PUSH
>terminator -x bash -c "cd ~/i/dotfiles && git add --all && git commit && git push --all"

PY2C
>. ~/proxies.sh
>python3.10 - << EOF
>from openai import OpenAI
>import os
>import subprocess
>with open("/home/megahomyak/.config/chatgpt_cli/openai_token.txt") as f:
>    client = OpenAI(api_key=f.read().strip())
>with open("/tmp/pycode.py", "w"):
>    pass
>os.system("terminator -x nvim /tmp/pycode.py")
>with open("/tmp/pycode.py", encoding="utf-8") as f:
>    code = f.read()
>
>def copy_to_clipboard(text):
>    output = subprocess.Popen(
>        ("xclip", "-selection", "clipboard", "-t", "text/plain", "-i"),
>        stdin=subprocess.PIPE,
>    )
>    output.stdin.write(text.encode("utf-8"))
>    output.stdin.close()
>    output.wait()
>
>copy_to_clipboard(code)
>
>completions = client.chat.completions.create(
>    messages=[
>        {
>            "role": "user",
>            "content": f"Translate the following code to C. Respond only with plain code, no codeblocks, comments or anything like that. It must be a full program that will compile on its own. The code that needs to be translated:\n\n{code}"
>        }
>    ],
>    model="gpt-3.5-turbo"
>)
>copy_to_clipboard(completions.choices[0].message.content)
>EOF
>notify-send "done"

SQUareIFY
>python - << EOF
>from PIL import Image, ImageGrab
>import subprocess
>from io import BytesIO
>
>def make_square(im, fill_color=(0, 0, 0, 0)):
>    x, y = im.size
>    side = max(x, y)
>    new_im = Image.new('RGBA', (side, side), fill_color)
>    new_im.paste(im, (int((side - x) / 2), int((side - y) / 2)))
>    return new_im
>
>def copy_to_clipboard(type_, bytes_):
>    output = subprocess.Popen(
>        ("xclip", "-selection", "clipboard", "-t", type_, "-i"),
>        stdin=subprocess.PIPE,
>    )
>    output.stdin.write(bytes_)
>    output.stdin.close()
>    output.wait()
>
>source = ImageGrab.grabclipboard()
>result = make_square(source)
>buffer = BytesIO()
>result.save(buffer, format="png")
>buffer.seek(0)
>copy_to_clipboard("image/png", buffer.getvalue())
>EOF

Temp-Mail
>firefox --new-tab --url https://temp-mail.org/en/

Download by Clipboard url
>xclip -out -selection clipboard | xargs wget -P ~/Downloads

MineCraft
>cd ~/TESLauncher
>java -jar target/TESLauncher-0.1.2.jar &

Emote picker
>/snap/bin/emote
